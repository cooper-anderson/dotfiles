set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'benmills/vimux'
Plugin 'Valloric/YouCompleteMe'
Plugin 'scrooloose/nerdcommenter'
Plugin 'vim-scripts/HJKL'
Plugin 'chrisbra/Colorizer'

" Syntax Plugins
Plugin 'vim-scripts/brainfuck-syntax'

" Colorschemes
Plugin 'aliou/moriarty.vim'
Plugin 'tomasiser/vim-code-dark'
Plugin 'Blevs/vim-dzo'
Plugin 'chriskempson/base16-vim'
Plugin 'dikiaap/minimalist'
Plugin 'josuegaleas/jay'
Plugin 'dracula/vim'
Plugin 'sjl/badwolf'
Plugin 'morhetz/gruvbox'
Plugin 'nanotech/jellybeans.vim'
Plugin 'jacoborus/tender.vim'
Plugin 'zeis/vim-kolor'
Plugin 'cooper-anderson/tjay.vim'


" Bundle 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}


set guifont=Inconsolata\ for\ Powerline:h15
let g:Powerline_symbols = 'fancy'

set encoding=utf-8
set fillchars+=stl:\ ,stlnc:\
if 1
	if empty($TMUX)
		set term=xterm-256color
	else
		set term=screen-256color
	endif
	set t_Co=256
	set t_ut=
endif
set termencoding=utf-8

if has("gui_running")
   let s:uname = system("uname")
   if s:uname == "Darwin\n"
      set guifont=Inconsolata\ for\ Powerline:h15
   endif
endif


" All of your Plugins must be added before the following line
call vundle#end()            " required
" filetype plugin indent on    " required

set rtp+=/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/powerline/bindings/vim

set rtp+=$HOME/.local/lib/python2.7/site-packages/powerline/bindings/vim/

" Always show statusline
set laststatus=2
set noshowmode
set timeoutlen=1000
set ttimeoutlen=0
" Allow selecting \n character
set virtualedit=onemore
" No moving the cursor when leaving insert mode
autocmd InsertLeave * normal `^
" Grady's selecting \n when pressing h to go up a line
if 1
	nnoremap <expr> <End> col([line("."), "$"]) == col(".") ? "<Esc>" : (col	([line("."), "$"]) - col(".")) . "l"
	nmap $ <End>
	noremap <F99> h
	nmap <expr> h col(".") == 1 && col([line(".") - 1, "$"]) > 1 ? "k<End>" : "<F99>"
	nmap <Backspace> h
endif

" Vimux control commands
nnoremap <F5> :w<CR>:call VimuxOpenRunner()<CR>:call VimuxRunCommand("clear; ./" . bufname("."))<CR>:<BACKSPACE>
nnoremap <F6> :call VimuxCloseRunner()<CR>

command! -nargs=1 Silent
\   execute 'silent !' . <q-args>
\ | execute 'redraw!'

" Set :find and :b autocompelte
set path+=**
set wildmenu

" Use 256 colours (Use this setting only if your terminal supports 256 colours)
" set t_Co=256

"Use 24-bit (true-color) mode in Vim/Neovim when outside tmux.
"If you're using tmux version 2.2 or later, you can remove the outermost $TMUX check and use tmux's 24-bit color support
"(see < http://sunaku.github.io/tmux-24bit-color.html#usage > for more information.)
if (empty($TMUX))
  if (has("nvim"))
    "For Neovim 0.1.3 and 0.1.4 < https://github.com/neovim/neovim/pull/2198 >
    let $NVIM_TUI_ENABLE_TRUE_COLOR=1
  endif
  "For Neovim > 0.1.5 and Vim > patch 7.4.1799 < https://github.com/vim/vim/commit/61be73bb0f965a895bfb064ea3e55476ac175162 >
  "Based on Vim patch 7.4.1770 (`guicolors` option) < https://github.com/vim/vim/commit/8a633e3427b47286869aa4b96f2bfc1fe65b25cd >
  " < https://github.com/neovim/neovim/wiki/Following-HEAD#20160511 >
  if (has("termguicolors"))
    set termguicolors
  endif
endif

set cursorline
set number
set whichwrap+=<,>,h,l,[,]
set vb t_vb=
set clipboard=unnamed
set backspace=2
" nnoremap j gj
" nnoremap k gk
" inoremap <down> gj
" inoremap <up> gk
" inoremap <Down> <C-o>gj
" inoremap <Up> <C-o>gk

set mouse=a
filetype indent on
filetype plugin on
autocmd VimEnter * set autoindent smartindent noexpandtab tabstop=4 shiftwidth=4
" set expandtab
" set shiftwidth=4
" set tabstop=4
" set autoindent
" set smartindent
set selection=exclusive
" Disable arrow keys in normal mode
map <up> <nop>
map <down> <nop>
map <left> <nop>
map <right> <nop>
" Show keystrokes
set showcmd

set pumheight=10

let g:ycm_autoclose_preview_window_after_completion = 1

" Remove MacVim scrollbars, if I ever decide to use MacVim
set guioptions=

" NERDCommenter add space after comment
let g:NERDSpaceDelims = 1

" Switch iTerm Cursor mode in Insert mode
if 0 && !has('gui')
	if exists('$TMUX')
		let &t_SI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=1\x7\<Esc>\\"
		let &t_EI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=2\x7\<Esc>\\"
	else
		let &t_SI = "\<Esc>]50;CursorShape=1\x7"
		let &t_EI = "\<Esc>]50;CursorShape=2\x7"
	endif
endif

syntax on
set background=dark
colorscheme tjay
